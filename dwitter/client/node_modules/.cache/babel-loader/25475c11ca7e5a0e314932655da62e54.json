{"ast":null,"code":"export default class HttpClient {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  }\n\n  async fetch(url, options) {\n    console.log(url);\n    const response = await fetch(`${this.baseURL}${url}`, { ...options,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...options.headers\n      }\n    });\n    let data;\n\n    try {\n      if (options.method !== \"DELETE\") {\n        data = await response.json();\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n    if (response.status > 299 || response.status < 200) {\n      const message = data && data.message ? data.message : \"wrong\";\n      throw new Error(message);\n    }\n\n    return data;\n  }\n\n}","map":{"version":3,"sources":["/Users/gim-yeongseog/Desktop/git repository/nodejs/dwitter/client/src/network/http.js"],"names":["HttpClient","constructor","baseURL","fetch","url","options","console","log","response","headers","data","method","json","e","error","status","message","Error"],"mappings":"AAAA,eAAe,MAAMA,UAAN,CAAiB;AAC9BC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,SAAKA,OAAL,GAAeA,OAAf;AACD;;AAEU,QAALC,KAAK,CAACC,GAAD,EAAMC,OAAN,EAAe;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,UAAMI,QAAQ,GAAG,MAAML,KAAK,CAAE,GAAE,KAAKD,OAAQ,GAAEE,GAAI,EAAvB,EAA0B,EACpD,GAAGC,OADiD;AAEpDI,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,WAAGJ,OAAO,CAACI;AAFJ;AAF2C,KAA1B,CAA5B;AAOA,QAAIC,IAAJ;;AACA,QAAI;AACF,UAAIL,OAAO,CAACM,MAAR,KAAmB,QAAvB,EAAiC;AAC/BD,QAAAA,IAAI,GAAG,MAAMF,QAAQ,CAACI,IAAT,EAAb;AACD;AACF,KAJD,CAIE,OAAOC,CAAP,EAAU;AACVP,MAAAA,OAAO,CAACQ,KAAR,CAAcD,CAAd;AACD;;AAED,QAAIL,QAAQ,CAACO,MAAT,GAAkB,GAAlB,IAAyBP,QAAQ,CAACO,MAAT,GAAkB,GAA/C,EAAoD;AAClD,YAAMC,OAAO,GAAGN,IAAI,IAAIA,IAAI,CAACM,OAAb,GAAuBN,IAAI,CAACM,OAA5B,GAAsC,OAAtD;AACA,YAAM,IAAIC,KAAJ,CAAUD,OAAV,CAAN;AACD;;AAED,WAAON,IAAP;AACD;;AA7B6B","sourcesContent":["export default class HttpClient {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  }\n\n  async fetch(url, options) {\n    console.log(url);\n    const response = await fetch(`${this.baseURL}${url}`, {\n      ...options,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...options.headers,\n      },\n    });\n    let data;\n    try {\n      if (options.method !== \"DELETE\") {\n        data = await response.json();\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n    if (response.status > 299 || response.status < 200) {\n      const message = data && data.message ? data.message : \"wrong\";\n      throw new Error(message);\n    }\n\n    return data;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}